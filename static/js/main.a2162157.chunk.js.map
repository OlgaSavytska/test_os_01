{"version":3,"sources":["Components/mmm.module.css","Components/Cjmp.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","none","customStyles","content","top","left","right","bottom","marginRight","transform","options","value","label","options1","options2","findOpt","find","opt","Cjmp","state","inputValue2","inputValue3","selectData","selectData1","selectData2","inputValue4","inputValue5","inputValue6","inputValue7","modalIsOpen","handleChange","e","setState","target","name","openModal","closeModal","deleteAll","onChangeSelect","handleSublit","prevebtDefault","changeColorUp","color8","inputValue9","ReactDOM","findDOMNode","refs","myInput10","focus","color7","inputValue8","myInput9","color6","myInput8","color5","myInput7","color4","myInput6","color3","myInput5","color2","myInput4","color1","myInput3","Modal","setAppElement","this","required","className","s","ty","sidebar","upclass","up","type","onClick","buttons1","resset","isOpen","onRequestClose","style","ref","subtitle","buttonModal","buttonmmm","confirm","changeColor","downclass","down","titlediv","title","section","inputsSection","form_group","ty2","placeholder","onChange","minLength","maxLength","pattern","id","htmlFor","ty3","ty4","form_group2","ty5","inputsSectionSelect","tyP4","select","autoComplete","formClose","form_group1","select1","ty6","ty7","buttons","Component","App","Boolean","window","location","hostname","match","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a2162157.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ty\":\"mmm_ty__3407J\",\"sidebar\":\"mmm_sidebar__Ct1kh\",\"title\":\"mmm_title__3Yr6l\",\"titlediv\":\"mmm_titlediv__2vFGX\",\"section\":\"mmm_section__39cNv\",\"up\":\"mmm_up__14rDd\",\"down\":\"mmm_down__3WA0u\",\"inputsSection\":\"mmm_inputsSection__2L_mG\",\"inputsSectionSelect\":\"mmm_inputsSectionSelect__37hTf\",\"formClose\":\"mmm_formClose__3_8Q3\",\"ty2\":\"mmm_ty2__1LAY4\",\"ty3\":\"mmm_ty3__2jZ24\",\"ty4\":\"mmm_ty4__3rq07\",\"ty5\":\"mmm_ty5__3EFxv\",\"ty6\":\"mmm_ty6__3kz-t\",\"ty7\":\"mmm_ty7__2WPi-\",\"form_group\":\"mmm_form_group__3Z9cw\",\"select\":\"mmm_select__n8aY0\",\"select1\":\"mmm_select1__SIrQN\",\"form_group2\":\"mmm_form_group2__2a3sI\",\"form_group1\":\"mmm_form_group1__36312\",\"buttons\":\"mmm_buttons__2X52r\",\"confirm\":\"mmm_confirm__3m4i_\",\"resset\":\"mmm_resset__3jCYm\",\"modal\":\"mmm_modal__idYCS\",\"buttonModal\":\"mmm_buttonModal__2xGwT\",\"buttonmmm\":\"mmm_buttonmmm__2peFh\",\"buttons1\":\"mmm_buttons1__2J4Z9\"};","/* eslint-disable no-return-assign */\n/* eslint-disable react/destructuring-assignment */\n/* eslint-disable react/jsx-no-duplicate-props */\n/* eslint-disable jsx-a11y/label-has-associated-control */\n/* eslint-disable jsx-a11y/no-autofocus */\n/* eslint-disable react/no-string-refs */\n/* eslint-disable react/no-find-dom-node */\nimport React, { Component } from 'react';\nimport Modal from 'react-modal';\nimport ReactDOM from 'react-dom';\nimport Select from 'react-select';\nimport s from './mmm.module.css';\n\nconst none = '#FFFFFF';\nconst customStyles = {\n  content: {\n    top: '34%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)',\n  },\n};\n\nconst options = [\n  { value: 'India', label: 'India' },\n  { value: 'Ukraine', label: 'Ukraine' },\n  { value: 'France', label: 'France' },\n  { value: 'UK', label: 'UK' },\n];\nconst options1 = [\n  { value: 'Maharashtra', label: 'Maharashtra' },\n  { value: 'Kyiv', label: 'Kyiv' },\n  { value: 'Paris', label: 'Paris' },\n  { value: 'London', label: 'London' },\n];\nconst options2 = [\n  { value: 'Delhi', label: 'Delhi' },\n  { value: 'Kyiv', label: 'Kyiv' },\n  { value: 'Paris', label: 'Paris' },\n  { value: 'London', label: 'London' },\n];\n\nconst findOpt = value => options.find(opt => opt.value === value);\n\nclass Cjmp extends Component {\n  state = {\n    inputValue2: '',\n    inputValue3: '',\n    selectData: '',\n    selectData1: '',\n    selectData2: '',\n    inputValue4: '',\n    inputValue5: '',\n    inputValue6: '',\n    inputValue7: '',\n    modalIsOpen: false,\n  };\n\n  componentDidMount() {\n    Modal.setAppElement('body');\n  }\n\n  handleChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  openModal = () => {\n    this.setState({ modalIsOpen: true });\n  };\n\n  closeModal = () => {\n    this.setState({ modalIsOpen: false });\n  };\n\n  deleteAll = () => {\n    this.setState({\n      inputValue2: '',\n      inputValue3: '',\n      selectData: '',\n      selectData1: '',\n      selectData2: '',\n      inputValue4: '',\n      inputValue5: '',\n      inputValue6: '',\n      inputValue7: '',\n      modalIsOpen: false,\n    });\n  };\n\n  onChangeSelect = opt => {\n    this.setState({\n      selectData: opt.value,\n    });\n  };\n\n  handleSublit = e => {\n    e.prevebtDefault();\n  };\n\n  changeColorUp = () => {\n    if (this.state.color8 !== none && this.state.inputValue9 !== true) {\n      ReactDOM.findDOMNode(this.refs.myInput10).focus();\n    }\n    if (this.state.color7 !== none && this.state.inputValue8 !== true) {\n      ReactDOM.findDOMNode(this.refs.myInput9).focus();\n    }\n    if (this.state.color6 !== none && this.state.inputValue7 !== true) {\n      ReactDOM.findDOMNode(this.refs.myInput8).focus();\n    }\n    if (this.state.color5 !== none && this.state.inputValue6 !== true) {\n      ReactDOM.findDOMNode(this.refs.myInput7).focus();\n    }\n    if (this.state.color4 !== none && this.state.inputValue5 !== true) {\n      ReactDOM.findDOMNode(this.refs.myInput6).focus();\n    }\n    if (this.state.color3 !== none && this.state.inputValue4 !== true) {\n      ReactDOM.findDOMNode(this.refs.myInput5).focus();\n    }\n    if (this.state.color2 !== none && this.state.inputValue3 !== true) {\n      ReactDOM.findDOMNode(this.refs.myInput4).focus();\n    }\n    if (this.state.color1 !== none && this.state.inputValue2 !== true) {\n      ReactDOM.findDOMNode(this.refs.myInput3).focus();\n    }\n  };\n\n  render() {\n    const {\n      inputValue2,\n      inputValue3,\n      selectData,\n      selectData1,\n      selectData2,\n      inputValue4,\n      inputValue5,\n      inputValue6,\n      inputValue7,\n      required,\n    } = this.state;\n    return (\n      <div className={s.ty}>\n        <form>\n          <div className={s.sidebar}>\n            <div className={s.upclass}>\n              <button\n                className={s.up}\n                type=\"submit\"\n                onClick={this.changeColorUp}\n              />\n            </div>\n            <div className={s.buttons1}>\n              <button\n                className={s.resset}\n                type=\"button\"\n                onClick={this.openModal}\n              >\n                Reset All\n              </button>\n              <Modal\n                isOpen={this.state.modalIsOpen}\n                onRequestClose={this.closeModal}\n                style={customStyles}\n              >\n                <h2 ref={subtitle => (this.subtitle = subtitle)}>\n                  Are you sure?\n                </h2>\n                <div className={s.buttonModal}>\n                  <button\n                    onClick={this.deleteAll}\n                    className={s.buttonmmm}\n                    type=\"button\"\n                  >\n                    Reset All\n                  </button>\n                  <button\n                    className={s.buttonmmm}\n                    type=\"button\"\n                    onClick={this.closeModal}\n                  >\n                    Cancel\n                  </button>\n                </div>\n              </Modal>\n              <button\n                className={s.confirm}\n                type=\"submit\"\n                onClick={this.changeColor}\n              >\n                Continue\n              </button>\n            </div>\n            <div className={s.downclass}>\n              <button\n                className={s.down}\n                type=\"submit\"\n                onClick={this.changeColor}\n              />\n            </div>\n          </div>\n          <div className={s.titlediv}>\n            <h1 className={s.title}>Basic Details</h1>\n            <div className={s.section}>\n              <div className={s.inputsSection}>\n                <div className={s.form_group}>\n                  <input\n                    className={s.ty2}\n                    ref=\"myInput2\"\n                    placeholder=\" \"\n                    value={inputValue2}\n                    onChange={this.handleChange}\n                    type=\"text\"\n                    minLength=\"2\"\n                    maxLength=\"50\"\n                    name=\"inputValue2\"\n                    pattern=\"[а-яёА-ЯЁ]+\"\n                    id=\"dynamic-label-input\"\n                    required\n                  />\n                  <label htmlFor=\"dynamic-label-input\">First name</label>\n                </div>\n                <div className={s.form_group}>\n                  <input\n                    className={s.ty3}\n                    placeholder=\" \"\n                    type=\"text\"\n                    ref=\"myInput3\"\n                    value={inputValue3}\n                    onChange={this.handleChange}\n                    minLength=\"2\"\n                    maxLength=\"50\"\n                    name=\"inputValue3\"\n                    pattern=\"[а-яёА-ЯЁ]+\"\n                    required\n                  />\n                  <label htmlFor=\"dynamic-label-input\">Last name</label>\n                </div>\n              </div>\n              <div className={s.inputsSection}>\n                <div className={s.form_group}>\n                  <input\n                    className={s.ty4}\n                    placeholder=\" \"\n                    type=\"text\"\n                    ref=\"myInput4\"\n                    value={inputValue4}\n                    onChange={this.handleChange}\n                    maxLength=\"250\"\n                    name=\"inputValue4\"\n                    pattern=\"^[-a-z0-9!#$%&'*+/=?^_`{|}~]+(?:\\.[-a-z0-9!#$%&'*+/=?^_`{|}~]+)*@(?:[a-z0-9]([-a-z0-9]{0,61}[a-z0-9])?\\.)*(?:aero|arpa|asia|biz|cat|com|coop|edu|gov|info|int|jobs|mil|mobi|museum|name|net|org|pro|tel|travel|[a-z][a-z])$\"\n                    required\n                  />\n                  <label htmlFor=\"dynamic-label-input\">Email ID</label>\n                </div>\n                <div className={s.form_group2}>\n                  <input\n                    className={s.ty5}\n                    placeholder=\" \"\n                    type=\"text\"\n                    ref=\"myInput5\"\n                    value={inputValue5}\n                    onChange={this.handleChange}\n                    minLength=\"5\"\n                    maxLength=\"30\"\n                    name=\"inputValue5\"\n                    pattern=\"^[A-Za-z_]+$\"\n                    required\n                  />\n                  <label htmlFor=\"dynamic-label-input\">User ID</label>\n                </div>\n              </div>\n              <div className={s.inputsSectionSelect}>\n                <div className={s.form_group}>\n                  <p className={s.tyP4}>Country</p>\n                  <Select\n                    className={s.select}\n                    ref=\"myInput6\"\n                    options={options}\n                    value={findOpt(selectData)}\n                    onChange={this.onChangeSelect}\n                    required={required}\n                    autoComplete=\"off\"\n                  />\n                </div>\n                <div className={s.formClose}>\n                  <div className={s.form_group1}>\n                    <p className={s.tyP4}>State</p>\n                    <Select\n                      className={s.select1}\n                      ref=\"myInput7\"\n                      options={options1}\n                      value={findOpt(selectData1)}\n                      onChange={this.onChangeSelect}\n                      required={required}\n                      autoComplete=\"off\"\n                    />\n                  </div>\n                  <div className={s.form_group}>\n                    <p className={s.tyP4}>City</p>\n                    <Select\n                      className={s.select1}\n                      ref=\"myInput8\"\n                      options={options2}\n                      value={findOpt(selectData2)}\n                      onChange={this.onChangeSelect}\n                      required={required}\n                      autoComplete=\"off\"\n                    />\n                  </div>\n                </div>\n              </div>\n              <div className={s.inputsSection}>\n                <div className={s.form_group}>\n                  <input\n                    className={s.ty6}\n                    placeholder=\" \"\n                    ref=\"myInput9\"\n                    value={inputValue6}\n                    onChange={this.handleChange}\n                    type=\"tel\"\n                    name=\"inputValue6\"\n                    pattern=\"380[0-9]{9}\"\n                    required\n                    id=\"2\"\n                  />\n                  <label htmlFor=\"dynamic-label-input\">Phone Number</label>\n                </div>\n                <div className={s.form_group}>\n                  <input\n                    className={s.ty7}\n                    placeholder=\" \"\n                    ref=\"myInput10\"\n                    value={inputValue7}\n                    onChange={this.handleChange}\n                    type=\"text\"\n                    name=\"inputValue7\"\n                    pattern=\"^[A-Za-z_0-9]+$\"\n                    required\n                  />\n                  <label htmlFor=\"dynamic-label-input\">Reference Code</label>\n                </div>\n              </div>\n              <div className={s.buttons}>\n                <button\n                  className={s.resset}\n                  type=\"button\"\n                  onClick={this.openModal}\n                >\n                  Reset All\n                </button>\n                <Modal\n                  isOpen={this.state.modalIsOpen}\n                  onRequestClose={this.closeModal}\n                  style={customStyles}\n                >\n                  <h2 ref={subtitle => (this.subtitle = subtitle)}>\n                    Are you sure?\n                  </h2>\n                  <div className={s.buttonModal}>\n                    <button\n                      onClick={this.deleteAll}\n                      className={s.buttonmmm}\n                      type=\"button\"\n                    >\n                      Reset All\n                    </button>\n                    <button\n                      className={s.buttonmmm}\n                      type=\"button\"\n                      onClick={this.closeModal}\n                    >\n                      Cansel\n                    </button>\n                  </div>\n                </Modal>\n                <button\n                  className={s.confirm}\n                  type=\"submit\"\n                  onClick={this.changeColor}\n                >\n                  Continue\n                </button>\n              </div>\n            </div>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default Cjmp;\n","import React from 'react';\nimport './App.css';\nimport Cjmp from './Components/Cjmp';\n\nconst App = () => {\n  return <Cjmp />;\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}