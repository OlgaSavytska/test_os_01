{"version":3,"sources":["Components/Page.module.css","Components/Fix.js","Components/selectStyles.js","Components/selectStyles2.js","Components/Page.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","noop","FixRequiredSelect","state","value","props","selectRef","setSelectRef","ref","onChange","actionMeta","setState","getValue","undefined","this","SelectComponent","required","enableRequired","isDisabled","tabIndex","autoComplete","style","opacity","width","height","position","onFocus","focus","Component","protoTypes","selectComponent","PropTypes","func","isRequired","bool","selectStyles","option","provided","borderBottom","color","isSelected","fontSize","backgroundColor","textAlign","cursor","container","base","control","minHeight","borderRadius","borderTop","borderLeft","borderRight","dropdownIndicator","display","indicatorSeparator","valueContainer","padding","paddingLeft","selectStyles2","Select","Fix","BaseSelect","options","customStyles","content","top","left","right","bottom","marginRight","transform","label","options1","options2","findOpt","find","opt","Page","inputValue2","inputValue3","selectData","selectData1","selectData2","inputValue4","inputValue5","inputValue6","inputValue7","modalIsOpen","handleChange","e","target","name","openModal","closeModal","deleteAll","React","createRef","onChangeSelect","handleSublit","prevebtDefault","Modal","setAppElement","className","s","ty","sidebar","upclass","up","type","onClick","changeColorUp","buttons1","resset","isOpen","onRequestClose","buttonModal","buttonmmm","confirm","changeColor","downclass","down","titlediv","title","section","inputsSection","form_group","ty2","placeholder","minLength","maxLength","pattern","id","htmlFor","ty3","ty4","form_group2","ty5","inputsSectionSelect","tyP4","styles","select","formClose","form_group1","ty6","ty7","buttons","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7527fec0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ty\":\"Page_ty__1b2MU\",\"sidebar\":\"Page_sidebar__25aMs\",\"title\":\"Page_title__1KnZf\",\"titlediv\":\"Page_titlediv__-89_f\",\"section\":\"Page_section__22TpT\",\"up\":\"Page_up__eveGT\",\"down\":\"Page_down__3kc9B\",\"inputsSection\":\"Page_inputsSection__1lFuD\",\"inputsSectionSelect\":\"Page_inputsSectionSelect__fL8MJ\",\"formClose\":\"Page_formClose__2Ig1v\",\"ty2\":\"Page_ty2__2Bnuf\",\"ty3\":\"Page_ty3__3uUTu\",\"ty4\":\"Page_ty4__1ld8N\",\"ty5\":\"Page_ty5__fNN5h\",\"ty6\":\"Page_ty6__bltNc\",\"ty7\":\"Page_ty7__3OZYd\",\"form_group\":\"Page_form_group__3CtAk\",\"select\":\"Page_select__1u6ed\",\"select1\":\"Page_select1__2rbfi\",\"form_group2\":\"Page_form_group2__21NZf\",\"form_group1\":\"Page_form_group1__1vKW9\",\"buttons\":\"Page_buttons__2r0Yy\",\"confirm\":\"Page_confirm__3JQ7U\",\"resset\":\"Page_resset__2eSaJ\",\"modal\":\"Page_modal__3zmUa\",\"buttonModal\":\"Page_buttonModal__13sjV\",\"buttonmmm\":\"Page_buttonmmm__2bHd5\",\"buttons1\":\"Page_buttons1__1KdW_\"};","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nconst noop = () => {\n  // no operation (do nothing real quick)\n};\n\nclass FixRequiredSelect extends Component {\n  state = {\n    value: this.props.value || '',\n  };\n\n  selectRef = null;\n\n  setSelectRef = ref => {\n    this.selectRef = ref;\n  };\n\n  onChange = (value, actionMeta) => {\n    this.props.onChange(value, actionMeta);\n    this.setState({ value });\n  };\n\n  getValue = () => {\n    if (this.props.value !== undefined) return this.props.value;\n    return this.state.value || '';\n  };\n\n  render() {\n    const { SelectComponent, required, ...props } = this.props;\n    const { isDisabled } = this.props;\n    const enableRequired = !isDisabled;\n\n    return (\n      <div>\n        <SelectComponent\n          {...props}\n          ref={this.setSelectRef}\n          onChange={this.onChange}\n        />\n        {enableRequired && (\n          <input\n            tabIndex={-1}\n            autoComplete=\"off\"\n            style={{\n              opacity: 0,\n              width: '100%',\n              height: 0,\n              position: 'absolute',\n            }}\n            value={this.getValue()}\n            onChange={noop}\n            onFocus={() => this.selectRef.focus()}\n            required={required}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nFixRequiredSelect.protoTypes = {\n  // react-select component class (e.g. Select, Creatable, Async)\n  selectComponent: PropTypes.func.isRequired,\n  onChange: PropTypes.func,\n  required: PropTypes.bool,\n};\n\nexport default FixRequiredSelect;\n","const selectStyles = {\n  option: (provided, state) => ({\n    ...provided,\n    borderBottom: '1px dotted pink',\n    color: state.isSelected ? 'blue' : '',\n    fontSize: 16,\n    backgroundColor: state.isSelected ? '#eee' : '',\n    textAlign: 'left',\n    cursor: 'pointer',\n  }),\n  container: base => ({\n    ...base,\n    width: '380px',\n  }),\n  control: base => ({\n    ...base,\n    height: 32,\n    minHeight: 32,\n    fontSize: 16,\n    borderRadius: 0,\n    width: '100%',\n    textAlign: 'left',\n    cursor: 'pointer',\n    borderTop: '0px',\n    borderLeft: '0px',\n    borderRight: '0px',\n  }),\n  dropdownIndicator: base => ({\n    ...base,\n    display: 'none',\n  }),\n  indicatorSeparator: base => ({\n    ...base,\n    display: 'none',\n  }),\n  valueContainer: base => ({\n    ...base,\n    padding: 0,\n    paddingLeft: 2,\n  }),\n};\n\nexport default selectStyles;\n","const selectStyles2 = {\n  option: (provided, state) => ({\n    ...provided,\n    borderBottom: '1px dotted pink',\n    color: state.isSelected ? 'blue' : '',\n    fontSize: 16,\n    backgroundColor: state.isSelected ? '#eee' : '',\n    textAlign: 'left',\n    cursor: 'pointer',\n  }),\n  container: base => ({\n    ...base,\n    width: '150px',\n  }),\n  control: base => ({\n    ...base,\n    height: 32,\n    minHeight: 32,\n    fontSize: 16,\n    borderRadius: 0,\n    width: '100%',\n    textAlign: 'left',\n    cursor: 'pointer',\n    borderTop: '0px',\n    borderLeft: '0px',\n    borderRight: '0px',\n  }),\n  dropdownIndicator: base => ({\n    ...base,\n    display: 'none',\n  }),\n  indicatorSeparator: base => ({\n    ...base,\n    display: 'none',\n  }),\n  valueContainer: base => ({\n    ...base,\n    padding: 0,\n    paddingLeft: 2,\n  }),\n};\n\nexport default selectStyles2;\n","/* eslint-disable react/jsx-props-no-spreading */\n/* eslint-disable react/prop-types */\n/* eslint-disable react/destructuring-assignment */\n/* eslint-disable jsx-a11y/label-has-associated-control */\n/* eslint-disable react/no-string-refs */\n// /* eslint-disable no-return-assign */\n// /* eslint-disable react/destructuring-assignment */\n// /* eslint-disable react/jsx-no-duplicate-props */\n// /* eslint-disable jsx-a11y/label-has-associated-control */\n// /* eslint-disable jsx-a11y/no-autofocus */\n// /* eslint-disable react/no-string-refs */\n// /* eslint-disable react/no-find-dom-node */\nimport React, { Component } from 'react';\nimport Modal from 'react-modal';\nimport BaseSelect from 'react-select';\nimport s from './Page.module.css';\nimport FixRequiredSelect from './Fix';\nimport selectStyles from './selectStyles';\nimport selectStyles2 from './selectStyles2';\n\nconst Select = props => (\n  <FixRequiredSelect\n    {...props}\n    SelectComponent={BaseSelect}\n    options={props.options || options}\n  />\n);\n\nconst customStyles = {\n  content: {\n    top: '34%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)',\n  },\n};\n\nconst options = [\n  { value: 'India', label: 'India' },\n  { value: 'Ukraine', label: 'Ukraine' },\n  { value: 'France', label: 'France' },\n  { value: 'UK', label: 'UK' },\n];\nconst options1 = [\n  { value: 'Maharashtra', label: 'Maharashtra' },\n  { value: 'Kyiv', label: 'Kyiv' },\n  { value: 'Paris', label: 'Paris' },\n  { value: 'London', label: 'London' },\n];\nconst options2 = [\n  { value: 'Delhi', label: 'Delhi' },\n  { value: 'Kyiv', label: 'Kyiv' },\n  { value: 'Paris', label: 'Paris' },\n  { value: 'London', label: 'London' },\n];\n\nconst findOpt = value => options.find(opt => opt.value === value);\n\nclass Page extends Component {\n  state = {\n    inputValue2: '',\n    inputValue3: '',\n    selectData: '',\n    selectData1: '',\n    selectData2: '',\n    inputValue4: '',\n    inputValue5: '',\n    inputValue6: '',\n    inputValue7: '',\n    modalIsOpen: false,\n  };\n\n  componentDidMount() {\n    Modal.setAppElement('body');\n  }\n\n  handleChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  openModal = () => {\n    this.setState({ modalIsOpen: true });\n  };\n\n  closeModal = () => {\n    this.setState({ modalIsOpen: false });\n  };\n\n  deleteAll = () => {\n    this.setState({\n      inputValue2: '',\n      inputValue3: '',\n      selectData: '',\n      selectData1: '',\n      selectData2: '',\n      inputValue4: '',\n      inputValue5: '',\n      inputValue6: '',\n      inputValue7: '',\n      modalIsOpen: false,\n    });\n    this.selectRef = React.createRef();\n  };\n\n  onChangeSelect = opt => {\n    this.setState({\n      selectData: opt.value,\n    });\n  };\n\n  handleSublit = e => {\n    e.prevebtDefault();\n  };\n\n  render() {\n    const {\n      inputValue2,\n      inputValue3,\n      selectData,\n      selectData1,\n      selectData2,\n      inputValue4,\n      inputValue5,\n      inputValue6,\n      inputValue7,\n    } = this.state;\n    return (\n      <div className={s.ty}>\n        <form>\n          <div className={s.sidebar}>\n            <div className={s.upclass}>\n              <button\n                className={s.up}\n                type=\"submit\"\n                onClick={this.changeColorUp}\n              />\n            </div>\n            <div className={s.buttons1}>\n              <button\n                className={s.resset}\n                type=\"button\"\n                onClick={this.openModal}\n              >\n                Reset All\n              </button>\n              <Modal\n                isOpen={this.state.modalIsOpen}\n                onRequestClose={this.closeModal}\n                style={customStyles}\n              >\n                <h2>Are you sure?</h2>\n                <div className={s.buttonModal}>\n                  <button\n                    onClick={this.deleteAll}\n                    className={s.buttonmmm}\n                    type=\"button\"\n                  >\n                    Reset All\n                  </button>\n                  <button\n                    className={s.buttonmmm}\n                    type=\"button\"\n                    onClick={this.closeModal}\n                  >\n                    Cancel\n                  </button>\n                </div>\n              </Modal>\n              <button\n                className={s.confirm}\n                type=\"submit\"\n                onClick={this.changeColor}\n              >\n                Continue\n              </button>\n            </div>\n            <div className={s.downclass}>\n              <button\n                className={s.down}\n                type=\"submit\"\n                onClick={this.changeColor}\n              />\n            </div>\n          </div>\n          <div className={s.titlediv}>\n            <h1 className={s.title}>Basic Details</h1>\n            <div className={s.section}>\n              <div className={s.inputsSection}>\n                <div className={s.form_group}>\n                  <input\n                    className={s.ty2}\n                    ref=\"myInput2\"\n                    placeholder=\" \"\n                    value={inputValue2}\n                    onChange={this.handleChange}\n                    type=\"text\"\n                    minLength=\"2\"\n                    maxLength=\"50\"\n                    name=\"inputValue2\"\n                    pattern=\"[а-яёА-ЯЁ]+\"\n                    id=\"dynamic-label-input\"\n                    required\n                  />\n                  <label htmlFor=\"dynamic-label-input\">First name</label>\n                </div>\n                <div className={s.form_group}>\n                  <input\n                    className={s.ty3}\n                    placeholder=\" \"\n                    type=\"text\"\n                    ref=\"myInput3\"\n                    value={inputValue3}\n                    onChange={this.handleChange}\n                    minLength=\"2\"\n                    maxLength=\"50\"\n                    name=\"inputValue3\"\n                    pattern=\"[а-яёА-ЯЁ]+\"\n                    required\n                  />\n                  <label htmlFor=\"dynamic-label-input\">Last name</label>\n                </div>\n              </div>\n              <div className={s.inputsSection}>\n                <div className={s.form_group}>\n                  <input\n                    className={s.ty4}\n                    placeholder=\" \"\n                    type=\"text\"\n                    ref=\"myInput4\"\n                    value={inputValue4}\n                    onChange={this.handleChange}\n                    maxLength=\"250\"\n                    name=\"inputValue4\"\n                    pattern=\"^[-a-z0-9!#$%&'*+/=?^_`{|}~]+(?:\\.[-a-z0-9!#$%&'*+/=?^_`{|}~]+)*@(?:[a-z0-9]([-a-z0-9]{0,61}[a-z0-9])?\\.)*(?:aero|arpa|asia|biz|cat|com|coop|edu|gov|info|int|jobs|mil|mobi|museum|name|net|org|pro|tel|travel|[a-z][a-z])$\"\n                    required\n                  />\n                  <label htmlFor=\"dynamic-label-input\">Email ID</label>\n                </div>\n                <div className={s.form_group2}>\n                  <input\n                    className={s.ty5}\n                    placeholder=\" \"\n                    type=\"text\"\n                    ref=\"myInput5\"\n                    value={inputValue5}\n                    onChange={this.handleChange}\n                    minLength=\"5\"\n                    maxLength=\"30\"\n                    name=\"inputValue5\"\n                    pattern=\"^[A-Za-z_]+$\"\n                    required\n                  />\n                  <label htmlFor=\"dynamic-label-input\">User ID</label>\n                </div>\n              </div>\n              <div className={s.inputsSectionSelect}>\n                <div className={s.form_group}>\n                  <p className={s.tyP4}>Country</p>\n                  <Select\n                    styles={selectStyles}\n                    className={s.select}\n                    value={findOpt(selectData)}\n                    options={options}\n                    onChange={this.onChangeSelect}\n                    required\n                  />\n                </div>\n                <div className={s.formClose}>\n                  <div className={s.form_group1}>\n                    <p className={s.tyP4}>State</p>\n                    <Select\n                      styles={selectStyles2}\n                      className={s.select}\n                      options={options1}\n                      value={findOpt(selectData1)}\n                      onChange={this.onChangeSelect}\n                      required\n                    />\n                  </div>\n                  <div className={s.form_group}>\n                    <p className={s.tyP4}>City</p>\n                    <Select\n                      styles={selectStyles2}\n                      className={s.select}\n                      options={options2}\n                      value={findOpt(selectData2)}\n                      onChange={this.onChangeSelect}\n                      required\n                    />\n                  </div>\n                </div>\n              </div>\n              <div className={s.inputsSection}>\n                <div className={s.form_group}>\n                  <input\n                    className={s.ty6}\n                    placeholder=\" \"\n                    ref=\"myInput9\"\n                    value={inputValue6}\n                    onChange={this.handleChange}\n                    type=\"tel\"\n                    name=\"inputValue6\"\n                    pattern=\"380[0-9]{9}\"\n                    required\n                    id=\"2\"\n                  />\n                  <label htmlFor=\"dynamic-label-input\">Phone Number</label>\n                </div>\n                <div className={s.form_group}>\n                  <input\n                    className={s.ty7}\n                    placeholder=\" \"\n                    ref=\"myInput10\"\n                    value={inputValue7}\n                    onChange={this.handleChange}\n                    type=\"text\"\n                    name=\"inputValue7\"\n                    pattern=\"^[A-Za-z_0-9]+$\"\n                    minLength=\"10\"\n                    maxLength=\"10\"\n                    required\n                  />\n                  <label htmlFor=\"dynamic-label-input\">Reference Code</label>\n                </div>\n              </div>\n              <div className={s.buttons}>\n                <button\n                  className={s.resset}\n                  type=\"button\"\n                  onClick={this.openModal}\n                >\n                  Reset All\n                </button>\n                <Modal\n                  isOpen={this.state.modalIsOpen}\n                  onRequestClose={this.closeModal}\n                  style={customStyles}\n                >\n                  <h2>Are you sure?</h2>\n                  <div className={s.buttonModal}>\n                    <button\n                      onClick={this.deleteAll}\n                      className={s.buttonmmm}\n                      type=\"button\"\n                    >\n                      Reset All\n                    </button>\n                    <button\n                      className={s.buttonmmm}\n                      type=\"button\"\n                      onClick={this.closeModal}\n                    >\n                      Cansel\n                    </button>\n                  </div>\n                </Modal>\n                <button\n                  className={s.confirm}\n                  type=\"submit\"\n                  onClick={this.changeColor}\n                >\n                  Continue\n                </button>\n              </div>\n            </div>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default Page;\n","import React from 'react';\nimport './App.css';\nimport Page from './Components/Page';\n\nconst App = () => {\n  return <Page />;\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}